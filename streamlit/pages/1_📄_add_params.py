import streamlit as st
import datetime as dt
from datetime import datetime
from dateutil.relativedelta import *
import sys
# sys.path.append('/home/ivan/Projects/streamlit/tools')
import tools as tool
import sqlite3
from inspect import getsourcefile
from os.path import abspath


path = str(abspath(getsourcefile(lambda:0)))
main_path = path.split('pages')[0]
con = sqlite3.connect(f'{main_path}/DB/Credit.db')
cur = con.cursor()

st.set_page_config(page_title='Add_main_params')
st.header("### üí∞ –î–æ–±–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")

# st.write(st.session_state)
if 'all_params_added' in st.session_state:
        st.subheader('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
        st.write('–í—ã –º–æ–ª–æ–¥–µ—ÜüôÇ')
else:
        with st.form('–î–æ–±–∞–≤—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:'):
                name_of_credit = st.text_input('–ù–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞', help = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤')
                if ' ' in name_of_credit:
                        st.error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –∏–º—è –∫—Ä–µ–¥–∏—Ç–∞')
                begin = st.date_input('–î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏', value=datetime.today())
                begin = datetime.combine(begin, datetime.min.time())
                body_of_credit = st.number_input('–û–±—â–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞', value = 1000000, step = 1)
                raid = st.number_input('–°—Ç–∞–≤–∫–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É', value = 5.0, step = 0.1)
                number_of_periods = st.number_input('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π (–º–µ—Å—è—Ü–µ–≤)', value = 1, step = 1)
                submit_main_params = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å")
                if submit_main_params:
                        st.session_state.last_payment, st.session_state.monthly_payment = tool.calc(begin, body_of_credit, raid, number_of_periods)
                        st.session_state.main_params_added = True

        if 'main_params_added' in st.session_state:                       
                with st.form('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–µ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞:'):
                        st.subheader('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–µ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞')
                        st.write(f'–ù–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞: {name_of_credit}')
                        st.write(f'–î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏: {begin}')
                        st.write(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂: {st.session_state.last_payment}')
                        st.write(f'–û–±—â–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: {body_of_credit}')
                        st.write(f'–°—Ç–∞–≤–∫–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É: {raid}')
                        st.write(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π (–º–µ—Å—è—Ü–µ–≤): {number_of_periods}')
                        st.write(f'–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {st.session_state.monthly_payment}')
                        submit_all_params = st.form_submit_button("–í–µ—Ä–Ω–æ")

                        if submit_all_params:
                                st.balloons()
                                st.session_state.all_params_added = True
                                data_to_insert = (name_of_credit, str(begin), body_of_credit, raid, number_of_periods, str(st.session_state.last_payment), st.session_state.monthly_payment)
                                tool.insert_to_db(cur, con, data_to_insert)
                                df_cred = tool.cals_monthly_payments(begin,  body_of_credit, st.session_state.monthly_payment, raid, number_of_periods)
                                df_cred .to_sql(name_of_credit, con, index=False)
                                st.experimental_rerun()
                                



